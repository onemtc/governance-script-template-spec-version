name: Issue6_Deploy

on: [workflow_dispatch]

env:
  baselineResourceGroup: ghgovenv
  baselineVariableStorageAccountName: ghgovenvnotsecrets
  baselineVariableTableName: pipelinevariables
  baselineTablePartitionKey: totestvariables

jobs:
  buildanddeploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
        
    - name: Install dependencies
      run: dotnet restore "Code To Push To Environments/App Service Web App/DevAppSample.sln"
      
    - name: Build
      run: |
       dotnet build --configuration Release --no-restore "Code To Push To Environments/App Service Web App/DevAppSample.sln"
       dotnet publish --configuration Release -o "./releaseoutput" "Code To Push To Environments/App Service Web App/DevAppSample.sln"

    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{secrets.PF_AZURE_CREDENTIALS}}
        
    - name: Get Primary Storage Key
      run: echo ::set-env name=STORAGE_KEY::$(az storage account keys list -g $baselineResourceGroup -n $baselineVariableStorageAccountName --query "[0].{value:value}" -o tsv)
        
    - name: Set Storage Connection String
      run: echo ::set-env name=CONNECTION_STRING::'DefaultEndpointsProtocol=https;AccountName='$baselineVariableStorageAccountName';AccountKey='$STORAGE_KEY';EndpointSuffix=core.windows.net'
    
    - name: Get Resource Group Name
      run: echo ::set-env name=RESOURCEGROUPNAME::$(az storage entity show --connection-string $CONNECTION_STRING --table-name $baselineVariableTableName --partition-key $baselineTablePartitionKey --row-key resourcegroupname --select Content --query "Content" -o tsv)
        
    - name: Get Location
      run: echo ::set-env name=LOCATION::$(az storage entity show --connection-string $CONNECTION_STRING --table-name $baselineVariableTableName --partition-key $baselineTablePartitionKey --row-key location --select Content --query "Content" -o tsv)
        
    - name: Get App Service Plan Name
      run: echo ::set-env name=APPSERVICEPLANNAME::$(az storage entity show --connection-string $CONNECTION_STRING --table-name $baselineVariableTableName --partition-key $baselineTablePartitionKey --row-key appserviceplanname --select Content --query "Content" -o tsv)

    - name: Get App Service Name
      run: echo ::set-env name=APPSERVICENAME::$(az storage entity show --connection-string $CONNECTION_STRING --table-name $baselineVariableTableName --partition-key $baselineTablePartitionKey --row-key appservicename --select Content --query "Content" -o tsv)
        
    - name: Get Subscription Id
      run: echo ::set-env name=SUBSCRIPTIONID::$(az storage entity show --connection-string $CONNECTION_STRING --table-name $baselineVariableTableName --partition-key $baselineTablePartitionKey --row-key subscriptionid --select Content --query "Content" -o tsv)

    - name: Show Pipeline Variables
      run: | 
        echo "Partition key:" $baselineTablePartitionKey
        echo "Resource group:" $RESOURCEGROUPNAME
        echo "Location:" $LOCATION 
        echo "App Service Plan Name:" $APPSERVICEPLANNAME 
        echo "App Service Name:" $APPSERVICENAME
        echo "Subscription Id:" $SUBSCRIPTIONID
    
    - name: Create Azure Resource Group
      run: az group create --location $LOCATION --name $RESOURCEGROUPNAME --subscription $SUBSCRIPTIONID
        
    - name: Deploy App Service Plan
      run: az deployment group create -g $RESOURCEGROUPNAME --template-file "Code To Push To Environments/App Service Web App/AppServicePlanDeployment/azuredeploy.json" --parameters name=$APPSERVICEPLANNAME location=$LOCATION
        
    - name: Deploy App Service
      run: az deployment group create -g $RESOURCEGROUPNAME --template-file "Code To Push To Environments/App Service Web App/AppServiceDeployment/azuredeploy.json" --parameters name=$APPSERVICENAME location=$LOCATION subscriptionId=$SUBSCRIPTIONID hostingPlanName=$APPSERVICEPLANNAME serverFarmResourceGroup=$RESOURCEGROUPNAME
    

    - name: 'Run Azure webapp deploy action'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{env.APPSERVICENAME}}
        package: "./releaseoutput"

